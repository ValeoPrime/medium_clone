import  { useEffect, useContext } from 'react'
import useFetch from 'customHooks/useFetch'
import useLocalStorage from 'customHooks/useLocalStorage'
import {CurentUserContext} from 'contexts/curentUserContaxet'


const CurentUserChecker = ({children}) => {
    const [{response}, doFetch] = useFetch('/user')
    const [, dispatch] = useContext(CurentUserContext)
    const [token] = useLocalStorage('token')

    useEffect(()=> {
        if(!token){
            dispatch({type: "SET_UNAUTHORIZED"})
            return
        }
        doFetch()
        dispatch({type: "LOADING"})
        
    }, [token, dispatch, doFetch])

    useEffect(()=>{
        if(!response){
            return
        }
        dispatch({type: 'SET_AUTHORIZED', payload: response.user})
        
    }, [response, dispatch])
    
    return children
}

export default CurentUserChecker


