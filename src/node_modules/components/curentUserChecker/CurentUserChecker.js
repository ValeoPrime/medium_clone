import  { useEffect, useContext } from 'react'
import useFetch from 'customHooks/useFetch'
import useLocalStorage from 'customHooks/useLocalStorage'
import {CurentUserContext} from 'contexts/curentUserContaxet'


const CurentUserChecker = ({children}) => {
    const [{response}, doFetch] = useFetch('/user')
    const [, setCurrentUserState] = useContext(CurentUserContext)
    const [token] = useLocalStorage('token')

    useEffect(()=> {
        if(!token){
            setCurrentUserState(state =>({
                ...state,
                isLoggedIn: false,
            }))
            return
        }
        doFetch()
        setCurrentUserState(state =>({
            ...state,
            isLoading: true
        }))
    }, [])

    useEffect(()=>{
        if(!response){
            return
        }

        setCurrentUserState(state => ({
            ...state,
            isLoading: false,
            isLoggedIn: true,
            currentUser: response.user
        }))
    }, [response, setCurrentUserState])
    
    return children
}

export default CurentUserChecker


